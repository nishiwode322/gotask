// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: provinceCityService.proto

package provinceCityService

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// message definition
type SetKeyValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName     string `protobuf:"bytes,1,opt,name=cityName,proto3" json:"cityName,omitempty"`
	ProvinceName string `protobuf:"bytes,2,opt,name=provinceName,proto3" json:"provinceName,omitempty"`
}

func (x *SetKeyValueRequest) Reset() {
	*x = SetKeyValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provinceCityService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetKeyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetKeyValueRequest) ProtoMessage() {}

func (x *SetKeyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provinceCityService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetKeyValueRequest.ProtoReflect.Descriptor instead.
func (*SetKeyValueRequest) Descriptor() ([]byte, []int) {
	return file_provinceCityService_proto_rawDescGZIP(), []int{0}
}

func (x *SetKeyValueRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *SetKeyValueRequest) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

type SetKeyValueReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reponse bool `protobuf:"varint,1,opt,name=reponse,proto3" json:"reponse,omitempty"`
}

func (x *SetKeyValueReponse) Reset() {
	*x = SetKeyValueReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provinceCityService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetKeyValueReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetKeyValueReponse) ProtoMessage() {}

func (x *SetKeyValueReponse) ProtoReflect() protoreflect.Message {
	mi := &file_provinceCityService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetKeyValueReponse.ProtoReflect.Descriptor instead.
func (*SetKeyValueReponse) Descriptor() ([]byte, []int) {
	return file_provinceCityService_proto_rawDescGZIP(), []int{1}
}

func (x *SetKeyValueReponse) GetReponse() bool {
	if x != nil {
		return x.Reponse
	}
	return false
}

//
type SelectByKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvinceName string `protobuf:"bytes,1,opt,name=provinceName,proto3" json:"provinceName,omitempty"`
}

func (x *SelectByKeyRequest) Reset() {
	*x = SelectByKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provinceCityService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectByKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectByKeyRequest) ProtoMessage() {}

func (x *SelectByKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provinceCityService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectByKeyRequest.ProtoReflect.Descriptor instead.
func (*SelectByKeyRequest) Descriptor() ([]byte, []int) {
	return file_provinceCityService_proto_rawDescGZIP(), []int{2}
}

func (x *SelectByKeyRequest) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

type SelectByKeyReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName string `protobuf:"bytes,1,opt,name=cityName,proto3" json:"cityName,omitempty"`
}

func (x *SelectByKeyReponse) Reset() {
	*x = SelectByKeyReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provinceCityService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectByKeyReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectByKeyReponse) ProtoMessage() {}

func (x *SelectByKeyReponse) ProtoReflect() protoreflect.Message {
	mi := &file_provinceCityService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectByKeyReponse.ProtoReflect.Descriptor instead.
func (*SelectByKeyReponse) Descriptor() ([]byte, []int) {
	return file_provinceCityService_proto_rawDescGZIP(), []int{3}
}

func (x *SelectByKeyReponse) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

//keyName:cityName or provinceName
type DeleteKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyName string `protobuf:"bytes,1,opt,name=keyName,proto3" json:"keyName,omitempty"`
}

func (x *DeleteKeyRequest) Reset() {
	*x = DeleteKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provinceCityService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKeyRequest) ProtoMessage() {}

func (x *DeleteKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provinceCityService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteKeyRequest) Descriptor() ([]byte, []int) {
	return file_provinceCityService_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteKeyRequest) GetKeyName() string {
	if x != nil {
		return x.KeyName
	}
	return ""
}

type DeleteKeyReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reponse bool `protobuf:"varint,1,opt,name=reponse,proto3" json:"reponse,omitempty"`
}

func (x *DeleteKeyReponse) Reset() {
	*x = DeleteKeyReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provinceCityService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKeyReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKeyReponse) ProtoMessage() {}

func (x *DeleteKeyReponse) ProtoReflect() protoreflect.Message {
	mi := &file_provinceCityService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKeyReponse.ProtoReflect.Descriptor instead.
func (*DeleteKeyReponse) Descriptor() ([]byte, []int) {
	return file_provinceCityService_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteKeyReponse) GetReponse() bool {
	if x != nil {
		return x.Reponse
	}
	return false
}

var File_provinceCityService_proto protoreflect.FileDescriptor

var file_provinceCityService_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x69, 0x74, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x12, 0x53,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x2e, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x38, 0x0a, 0x12, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x12, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x92, 0x02, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x43, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x42, 0x79, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42,
	0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x43, 0x69, 0x74,
	0x79, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x53,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x53, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x36, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x12, 0x11, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x12, 0x3a, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x11, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_provinceCityService_proto_rawDescOnce sync.Once
	file_provinceCityService_proto_rawDescData = file_provinceCityService_proto_rawDesc
)

func file_provinceCityService_proto_rawDescGZIP() []byte {
	file_provinceCityService_proto_rawDescOnce.Do(func() {
		file_provinceCityService_proto_rawDescData = protoimpl.X.CompressGZIP(file_provinceCityService_proto_rawDescData)
	})
	return file_provinceCityService_proto_rawDescData
}

var file_provinceCityService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_provinceCityService_proto_goTypes = []interface{}{
	(*SetKeyValueRequest)(nil), // 0: SetKeyValueRequest
	(*SetKeyValueReponse)(nil), // 1: SetKeyValueReponse
	(*SelectByKeyRequest)(nil), // 2: SelectByKeyRequest
	(*SelectByKeyReponse)(nil), // 3: SelectByKeyReponse
	(*DeleteKeyRequest)(nil),   // 4: DeleteKeyRequest
	(*DeleteKeyReponse)(nil),   // 5: DeleteKeyReponse
}
var file_provinceCityService_proto_depIdxs = []int32{
	2, // 0: ProvinceCityService.GetCityByProvince:input_type -> SelectByKeyRequest
	0, // 1: ProvinceCityService.SetCityAndProvince:input_type -> SetKeyValueRequest
	4, // 2: ProvinceCityService.DeleteCity:input_type -> DeleteKeyRequest
	4, // 3: ProvinceCityService.DeleteProvince:input_type -> DeleteKeyRequest
	3, // 4: ProvinceCityService.GetCityByProvince:output_type -> SelectByKeyReponse
	1, // 5: ProvinceCityService.SetCityAndProvince:output_type -> SetKeyValueReponse
	5, // 6: ProvinceCityService.DeleteCity:output_type -> DeleteKeyReponse
	5, // 7: ProvinceCityService.DeleteProvince:output_type -> DeleteKeyReponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_provinceCityService_proto_init() }
func file_provinceCityService_proto_init() {
	if File_provinceCityService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_provinceCityService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetKeyValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provinceCityService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetKeyValueReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provinceCityService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectByKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provinceCityService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectByKeyReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provinceCityService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provinceCityService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKeyReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_provinceCityService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_provinceCityService_proto_goTypes,
		DependencyIndexes: file_provinceCityService_proto_depIdxs,
		MessageInfos:      file_provinceCityService_proto_msgTypes,
	}.Build()
	File_provinceCityService_proto = out.File
	file_provinceCityService_proto_rawDesc = nil
	file_provinceCityService_proto_goTypes = nil
	file_provinceCityService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProvinceCityServiceClient is the client API for ProvinceCityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProvinceCityServiceClient interface {
	GetCityByProvince(ctx context.Context, opts ...grpc.CallOption) (ProvinceCityService_GetCityByProvinceClient, error)
	SetCityAndProvince(ctx context.Context, opts ...grpc.CallOption) (ProvinceCityService_SetCityAndProvinceClient, error)
	DeleteCity(ctx context.Context, opts ...grpc.CallOption) (ProvinceCityService_DeleteCityClient, error)
	DeleteProvince(ctx context.Context, opts ...grpc.CallOption) (ProvinceCityService_DeleteProvinceClient, error)
}

type provinceCityServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProvinceCityServiceClient(cc grpc.ClientConnInterface) ProvinceCityServiceClient {
	return &provinceCityServiceClient{cc}
}

func (c *provinceCityServiceClient) GetCityByProvince(ctx context.Context, opts ...grpc.CallOption) (ProvinceCityService_GetCityByProvinceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProvinceCityService_serviceDesc.Streams[0], "/ProvinceCityService/GetCityByProvince", opts...)
	if err != nil {
		return nil, err
	}
	x := &provinceCityServiceGetCityByProvinceClient{stream}
	return x, nil
}

type ProvinceCityService_GetCityByProvinceClient interface {
	Send(*SelectByKeyRequest) error
	Recv() (*SelectByKeyReponse, error)
	grpc.ClientStream
}

type provinceCityServiceGetCityByProvinceClient struct {
	grpc.ClientStream
}

func (x *provinceCityServiceGetCityByProvinceClient) Send(m *SelectByKeyRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *provinceCityServiceGetCityByProvinceClient) Recv() (*SelectByKeyReponse, error) {
	m := new(SelectByKeyReponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *provinceCityServiceClient) SetCityAndProvince(ctx context.Context, opts ...grpc.CallOption) (ProvinceCityService_SetCityAndProvinceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProvinceCityService_serviceDesc.Streams[1], "/ProvinceCityService/SetCityAndProvince", opts...)
	if err != nil {
		return nil, err
	}
	x := &provinceCityServiceSetCityAndProvinceClient{stream}
	return x, nil
}

type ProvinceCityService_SetCityAndProvinceClient interface {
	Send(*SetKeyValueRequest) error
	CloseAndRecv() (*SetKeyValueReponse, error)
	grpc.ClientStream
}

type provinceCityServiceSetCityAndProvinceClient struct {
	grpc.ClientStream
}

func (x *provinceCityServiceSetCityAndProvinceClient) Send(m *SetKeyValueRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *provinceCityServiceSetCityAndProvinceClient) CloseAndRecv() (*SetKeyValueReponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SetKeyValueReponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *provinceCityServiceClient) DeleteCity(ctx context.Context, opts ...grpc.CallOption) (ProvinceCityService_DeleteCityClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProvinceCityService_serviceDesc.Streams[2], "/ProvinceCityService/DeleteCity", opts...)
	if err != nil {
		return nil, err
	}
	x := &provinceCityServiceDeleteCityClient{stream}
	return x, nil
}

type ProvinceCityService_DeleteCityClient interface {
	Send(*DeleteKeyRequest) error
	CloseAndRecv() (*DeleteKeyReponse, error)
	grpc.ClientStream
}

type provinceCityServiceDeleteCityClient struct {
	grpc.ClientStream
}

func (x *provinceCityServiceDeleteCityClient) Send(m *DeleteKeyRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *provinceCityServiceDeleteCityClient) CloseAndRecv() (*DeleteKeyReponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(DeleteKeyReponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *provinceCityServiceClient) DeleteProvince(ctx context.Context, opts ...grpc.CallOption) (ProvinceCityService_DeleteProvinceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProvinceCityService_serviceDesc.Streams[3], "/ProvinceCityService/DeleteProvince", opts...)
	if err != nil {
		return nil, err
	}
	x := &provinceCityServiceDeleteProvinceClient{stream}
	return x, nil
}

type ProvinceCityService_DeleteProvinceClient interface {
	Send(*DeleteKeyRequest) error
	CloseAndRecv() (*DeleteKeyReponse, error)
	grpc.ClientStream
}

type provinceCityServiceDeleteProvinceClient struct {
	grpc.ClientStream
}

func (x *provinceCityServiceDeleteProvinceClient) Send(m *DeleteKeyRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *provinceCityServiceDeleteProvinceClient) CloseAndRecv() (*DeleteKeyReponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(DeleteKeyReponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ProvinceCityServiceServer is the server API for ProvinceCityService service.
type ProvinceCityServiceServer interface {
	GetCityByProvince(ProvinceCityService_GetCityByProvinceServer) error
	SetCityAndProvince(ProvinceCityService_SetCityAndProvinceServer) error
	DeleteCity(ProvinceCityService_DeleteCityServer) error
	DeleteProvince(ProvinceCityService_DeleteProvinceServer) error
}

// UnimplementedProvinceCityServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProvinceCityServiceServer struct {
}

func (*UnimplementedProvinceCityServiceServer) GetCityByProvince(ProvinceCityService_GetCityByProvinceServer) error {
	return status.Errorf(codes.Unimplemented, "method GetCityByProvince not implemented")
}
func (*UnimplementedProvinceCityServiceServer) SetCityAndProvince(ProvinceCityService_SetCityAndProvinceServer) error {
	return status.Errorf(codes.Unimplemented, "method SetCityAndProvince not implemented")
}
func (*UnimplementedProvinceCityServiceServer) DeleteCity(ProvinceCityService_DeleteCityServer) error {
	return status.Errorf(codes.Unimplemented, "method DeleteCity not implemented")
}
func (*UnimplementedProvinceCityServiceServer) DeleteProvince(ProvinceCityService_DeleteProvinceServer) error {
	return status.Errorf(codes.Unimplemented, "method DeleteProvince not implemented")
}

func RegisterProvinceCityServiceServer(s *grpc.Server, srv ProvinceCityServiceServer) {
	s.RegisterService(&_ProvinceCityService_serviceDesc, srv)
}

func _ProvinceCityService_GetCityByProvince_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProvinceCityServiceServer).GetCityByProvince(&provinceCityServiceGetCityByProvinceServer{stream})
}

type ProvinceCityService_GetCityByProvinceServer interface {
	Send(*SelectByKeyReponse) error
	Recv() (*SelectByKeyRequest, error)
	grpc.ServerStream
}

type provinceCityServiceGetCityByProvinceServer struct {
	grpc.ServerStream
}

func (x *provinceCityServiceGetCityByProvinceServer) Send(m *SelectByKeyReponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *provinceCityServiceGetCityByProvinceServer) Recv() (*SelectByKeyRequest, error) {
	m := new(SelectByKeyRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProvinceCityService_SetCityAndProvince_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProvinceCityServiceServer).SetCityAndProvince(&provinceCityServiceSetCityAndProvinceServer{stream})
}

type ProvinceCityService_SetCityAndProvinceServer interface {
	SendAndClose(*SetKeyValueReponse) error
	Recv() (*SetKeyValueRequest, error)
	grpc.ServerStream
}

type provinceCityServiceSetCityAndProvinceServer struct {
	grpc.ServerStream
}

func (x *provinceCityServiceSetCityAndProvinceServer) SendAndClose(m *SetKeyValueReponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *provinceCityServiceSetCityAndProvinceServer) Recv() (*SetKeyValueRequest, error) {
	m := new(SetKeyValueRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProvinceCityService_DeleteCity_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProvinceCityServiceServer).DeleteCity(&provinceCityServiceDeleteCityServer{stream})
}

type ProvinceCityService_DeleteCityServer interface {
	SendAndClose(*DeleteKeyReponse) error
	Recv() (*DeleteKeyRequest, error)
	grpc.ServerStream
}

type provinceCityServiceDeleteCityServer struct {
	grpc.ServerStream
}

func (x *provinceCityServiceDeleteCityServer) SendAndClose(m *DeleteKeyReponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *provinceCityServiceDeleteCityServer) Recv() (*DeleteKeyRequest, error) {
	m := new(DeleteKeyRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProvinceCityService_DeleteProvince_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProvinceCityServiceServer).DeleteProvince(&provinceCityServiceDeleteProvinceServer{stream})
}

type ProvinceCityService_DeleteProvinceServer interface {
	SendAndClose(*DeleteKeyReponse) error
	Recv() (*DeleteKeyRequest, error)
	grpc.ServerStream
}

type provinceCityServiceDeleteProvinceServer struct {
	grpc.ServerStream
}

func (x *provinceCityServiceDeleteProvinceServer) SendAndClose(m *DeleteKeyReponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *provinceCityServiceDeleteProvinceServer) Recv() (*DeleteKeyRequest, error) {
	m := new(DeleteKeyRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ProvinceCityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ProvinceCityService",
	HandlerType: (*ProvinceCityServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetCityByProvince",
			Handler:       _ProvinceCityService_GetCityByProvince_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "SetCityAndProvince",
			Handler:       _ProvinceCityService_SetCityAndProvince_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DeleteCity",
			Handler:       _ProvinceCityService_DeleteCity_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DeleteProvince",
			Handler:       _ProvinceCityService_DeleteProvince_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "provinceCityService.proto",
}
